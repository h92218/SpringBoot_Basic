* 웹 어플리케이션은 수많은 요청이 들어옴
-> 요청때마다 객체를 생성하면 리소스 낭비

* 싱글톤 패턴
- 클래스 인스턴스가 1개만 생성되는 디자인패턴
- private 생성자를 사용함

* 싱글톤 컨테이너
- 스프링 컨테이너는 싱글턴 패턴을 적용하지 않아도 객체 인스턴스를 싱글톤으로 관리함

* 싱글톤 방식의 주의점
- stateless로 설계해야 함
- 특정 클라이언트에 의존적인 필드가 있으면 안 됨.
- 가급적 읽기만 가능하도록
- 필드에 공유값을 설정하면 위험함.
